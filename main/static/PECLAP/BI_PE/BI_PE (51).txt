INTRODUCTON
The topic of the research proposal is “Cloud Storage Development of the Text Corpora in Heterogeneous Formats”. Text corpora demand large dynamically structured storage for storing files, plain text files, annotations, annotation rules and other information of the texts and the text corpora such as (title, author(s) and etc.). The research proposal is associated with heterogeneous data keeping, data manipulation, role management, service-oriented architecture. The cloud storage development of the text corpora is a significant task; because of a text file and a text corpus have their own unique attributes. The storage does not keep data and metadata in one place it makes limitations on the storage. A user cannot use other users’ texts and text corpora if the user does not have access to them. To work with the storage, other developers need to have approved formats of input and output data.
These given problems are significant and searching solutions to the problems helps me improve my professional skills such as creating a combined repository for storing data and metadata, designing and developing service-oriented applications. There are two purposes of the research paper. The first purpose of the research is to develop storage for keeping text corpora and additional information. The second purpose is to develop application program interfaces for working with the storage. It helps linguists working with the system in whole. The functions of the text corpora storage involve keeping data, receiving data, adding extra data to the text corpus and texts, exchanging text corpora and texts between linguists.
There are several assumptions of the research proposal, such as tools for annotating text corpora, converting a file from its own format to a plain text file, presenting results will be developed by other developers.
Theoretical base of the keeping heterogeneous data and developing text corpora storage is very helpful to understand how to begin this work. Primary text corpus scheme needs to contain files, tokens, tags, lemmata and have some attributes such as a capital, a separator, a typeset and a sentence. This scheme is outdated, but it can be used to create a base scheme of the storage and then this scheme can be extended to accommodate current requirements. Each plain text file usually has different annotations and each annotation needs to be kept in an xml file. It allows using different annotation tools. Dynamically added heterogeneous data need to be kept in one repository; static data need to be kept in other repository. Both of these works describe that keeping metadata and data in different repositories saves memory of the repositories and increases productivity. There are some solutions for keeping loosely coupled heterogeneous data, for instance, an xml text file or an oriented graph. We will use tables and relationships between the tables for keeping complicated attributes of text corpora and text files. The scheme of the tables and the relationships will look like an oriented graph and will be converted into an xml file.
The research proposal gives information to create text corpora storage that can use different annotation, converting and visualization tools. The result of the research proposal is very essential for creating a big system in the whole. The implementation lets other developers use the text corpus storage for keeping and using data via the application program interfaces.
PROBLEM STATEMENT
Ideal situation consists of some steps. First of all, the end user creates a new text corpus which has some specific attributes. These attributes need to be kept in the storage and can be used in the following. The second step involves loading some files where each of them has its own specific attributes. The third step is to convert the file into a plain text file. The final step involves using an annotation tool to convert the plain text file into an xml document based on annotation rules.
Unfortunately, the real situation is not the ideal situation. Some systems allow a user to generate a new text corpus but the text corpus has limited size and the user cannot markup the text corpus with text corpus attributes. Some users insert the same files into the storage, because they cannot share them with other users. To use an annotation tool, the user needs to find filter to convert the file into a plain text file. It is a very complicated task, because some files cannot be converted to a plain text file or the plain text file can have errors after converting. Different annotation tools create an xml text file based on their own rules. Each of annotation tools has its own rules, therefore, xml files of different annotations cannot be generalized and kept in one text corpus.
Of course, there is a gap between the real situation and the ideal situation. The research paper suggests a new solution that is the most relevant. Dynamically added text corpus attributes are kept in a table. It saves memory of the storage and when the user creates new text corpora, the user can chose some of the existing attributes from the table and insert data into attributes or add new attributes to the table. If the text was downloaded into the storage and had “public” attribute, hence, other user can add this text to their text corpora. Dynamically added text attributes can be kept in a table. The user can use them to markup the text. It saves memory of the storage and increases productivity of searching. When the user uses an annotation tool and receives an annotation, the annotation needs to be saved in the storage. It increases productivity. 
OBJECTIVES AND AIMS
The objective of the research proposal is to develop cloud storage of the text corpora in heterogeneous formats and the application program interfaces for working with the cloud storage. 
In order to achieve the objective, it needed to be required to perform the following tasks. First of all, it is necessary to provide an overview of the existing cloud platforms. This step helps to understand limitations of the cloud platforms and the size of the storage. The next step involves providing an overview of the ways to keep data without a clear structure. This step is central to understand idea of keeping heterogeneous data. Moreover, this step is fundamental base for designing the scheme of the storage. The final step involves developing the storage and the application program interfaces for working with the storage. 
METHODS
There are a lot of methods which can be used in the research proposal such as object-oriented programming, service-oriented architecture, data keeping, data manipulation, dynamic-functional programming, but only some of them are used in the research proposal. The object-oriented programming involves representing a program like classes and relationships between them. The service-oriented architecture is a way to develop a computer system based on using loosely coupled compute-servers where other servers can replace existing compute-servers. The data keeping is a method to understand how to organize a loosely coupled scheme which allows keeping data in storage at lower cost. 
The storage had limited size and very complicated structure, because it needs to keep dynamically added metadata. The problem was solved, metadata of the text corpora and files had to be kept in two different repositories. The first repository had to store metadata of the files and text corpora in special two tables that can be expanded without problems. The second repository had to store files, plain text files and annotations.
The service-oriented architecture is used to let other developers use the cloud storage. There will be created some methods which let other developers used the storage in their own projects. Their projects are known as clients.
The input data had different structure and need to kept different annotations of the text in the storage. The solution to the problem was found, the research proposal will use the C# programming language, which is the language of object-oriented programming, for creating the classes and relationship between them. The model will be used to keep heterogeneous data in a domain model. The model will be an intermediate level between the storage and the clients. 
REDICTED RESULTS
The excepted result of the research proposal will be the cloud storage of the text corpora in the heterogeneous formats and the application program interfaces. The cloud storage will be scalable for keeping a great number of text corpora, text files, plain text files, annotation rules and annotations. Applications program interfaces let the developers not to depend on the size of the storage. 
The cloud storage will be very important for end users. The cloud storage will let them forget to keep files, plain text files, annotations, annotation rules and annotation tools on their own personal computers. It should save memory of their computers and time. This storage will allow them to work in internet and share text corpora, files, plain text files, annotations among themselves. They will not to use other programs to transport data from them to other user. They can merge their text corpora into some groups of text corpora to work together. 
The cloud storage will let developers use the storage in their projects and will not depend on the size of the storage. The developers will not to write code for connecting their applications with the storage, because the application program interfaces will be written. The developers will use the application program interfaces to work with the storage.
STRENGTHS AND LIMITATIONS OF THE STUDY
Several main strengths, limitations and delimitations are considered in this section. The main strengths of the cloud storage are available for use around the clock and the application program interfaces can be used in different project that can be replaced by other.
There are some limitations of the cloud storage. First of all, the cloud storage will work on “Microsoft Azure” platform. Unfortunately, “Microsoft Azure” platform give permission to create storage with limited size no more 500 Gbytes per account. The second limitation is that “Microsoft Azure” platform demands payments for using their services. However, “Microsoft Azure” platform allows students, teachers and start-up companies to use their platform for 3 years without pay, after this period need to reach an agreement.
There are main delimitations in the proposal papers. First of all, other developers need to create their components in time to combine all components into the whole system. Second delimitation is that the annotation tools create output file in xml format.
CONCLUSION
The research paper has given an account of keeping heterogeneous data in storage. The purposes of the research demand large dynamically structured storage of text corpora and application program interfaces for working with the storage. The works are reviewed in the introduction help understand the storage’s scheme and how to keep heterogeneous data in the storage.
Service-orientated architecture allows developing a loosely coupled system where each element of the system can be replaced into other parts. Data keeping describes which structures can be used to develop storage’s schemes. Object- orientated programming creates intermediate level between a repository and clients.
The storage will keep text corpora in heterogeneous data and the application program interfaces will let developers work with the storage. 
The structures will be used in the storage can be improved and modified to make the storage rapider and more affordable. The storage can be divided into some repositories to reduce workload, solve the limited size problem and increase productivity. 
