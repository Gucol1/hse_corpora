INTRODUCTON
The topic of this research is Web-editor Development for the Visual Language of the Lexical-semantic Templates Description. Computational linguistics deals with the development of algorithms and application software for processing linguistic information. Due to constant and rapid growth of unstructured textual information, this area of science is widespread recently. One of the traditional areas of linguistics, corpus linguistics, with the advent of computer technology, has received strong technological support. For linguists, this branch of linguistics is interesting, because, with the help of corpora, they can handle huge amounts of texts, that impossible to process manually, and to solve the problems of statistical language examination. Applied linguistics is used where necessary to extract useful information from a large amount of data on one of the natural languages (search engines, speech recognition, automatic translation, etc.). In order to begin to analyze the text, specify rules (template design), on which it will be annotated. Lexical-semantic patterns combine individual word lexical elements into groups according to their signification.
The problem is that to create such patterns you need to use the language JAPE, based on regular expressions, but it is difficult for people, who do not meet this earlier. For this reason, the web editor will be designed and implemented. Besides, to make JAPE readable and clear it is necessary to create a DSL, which allows making patterns in terms of subject area. Graphic notation allow to build visual models - diagrams, easily perceived by different categories of users, that is why, it was decided to create visual DSL.
I am interesting in this work because of the experience of creating a DSL. There are many situations where you can apply this skill in future professional activity. In addition, now, many people are interested in visual languages, editors for them, and even software platforms that allow creating both editors and languages. Moreover, this work will bring experience in the teamwork and one software product development by several people with the final integration of all modules.
On the one hand, Mark Minas prove that free-hand editing better than syntax-directed editing, but in this case, it is significant to have a strict rules for diagram drawing, because a VDSL is developed on the basis of JAPE language, which has a strict syntax. On the other hand, to create user-friendly environment, it was decided to create an editor, which will immediately mark all user’s mistakes. Gennaro Costagliola et al. describe this error handling strategy.
During the analogues review, only one editor, specialized in JAPE was found, it is not much different from a text editor and does not meet the requirements stated in this study.
PROBLEM STATEMENT
GATE is software that solves a problem with text analysis or human language processing. Besides, it is free for users and open source. JAPE language based on regular expressions, its grammar is a set of phases of pattern sets. This language determines specific rules by which the text will be analyzed. It provides an opportunity to find words not only on morphological characteristics but also on significance, because lexicosemantic patterns associate meaning of the words and structure of the language. Linguists can use this tool for variety of tasks, such as graphemical and lexico-grammatical analysis of text and others. In many cases, it is difficult at first glance and it takes time to study syntax of JAPE or use all capabilities that it provides. For this reason a new web-editor will be created, which give an option of working with JAPE via diagrams. Diagrams is as well as templates for GATE, but implemented on visual language. DSL, developed in terms of JAPE will allow users operate with domain concepts instead of general-purpose language constructs. All this opportunities will reduce training time and simplify lexicosemantic templates construction.
OBJECTIVES AND AIMS
The objective of this study is to develop the visual object-oriented language to describe the lexical-semantic patterns based on JAPE, and web-editor for this language. To achieve this, the six aims were allocated. First, it is required to examine the JAPE language. That is, to consider the syntax of the language, its features and principles of operation. To identify editors for JAPE, describe their advantages and disadvantages, existing online editors for several visual languages will be reviewed. Then, functional web-editor requirements, including business requirements, integration, etc. will be stated. According to them, web-editor for visual DSL based on JAPE will be created. It allows creating and editing diagrams, storing them and using for text analysis. To implementation of these functions, web-editor must be fitted with tools for translation that allow generating JAPE code from diagrams developed by the user on visual DSL. The definition of requirements for input and output data, so that other modules of the system for text analysis (SFTA) could use them, ensure the successful integration.
METHODS
First, to find useful functions that can be implemented in the editor, the analogs was reviewed. Only one specialized in JAPE editor was found. For a review of the existing editors’ analysis and comparison research methods were used. When designing a web-editor for VDSL based on JAPE object-oriented modeling of the information, methods of object-oriented design (UML) were used. For the implementation of this editor an object-oriented technology and web programming, visualization methods of graph structures were applicable. As a software platform, Java was chosen because of its opportunities to develop a cross-platform open source solutions.
PREDICTED RESULTS
The web-editor will be created and integrated into a SFTA. It is only a part, which will provide templates for further text analysis and results visualization. Besides, demonstration templates will be created and on them it will be possible create the new ones.
STRENGTHS AND LIMITATIONS OF THE STUDY
At the current stage of development, it is planned to make an editor with the functions of creating, editing and saving diagrams. Only files with .jape extension will be supported, because of integration with SFTA. In this version, function of auto-generation code on JAPE during the diagram drawing will not be available in use. All this and many other functions will be added on the next development study.
CONCLUSION
This research is aims to create a web-editor, which helps to linguists, create lexicosemantic templates on JAPE via diagrams. To simplify a textual language, a new VDSL will be created based on JAPE. Many tools for web-editors creation was made and several ideas from it will be implement in developed web-editor. As a software platform, Java was chosen and for VDSL creation, object-oriented modeling, object-oriented design, web programming and visualization methods of graph structures were used. Because of complicity and straight syntax of JAPE, it was decided to use syntax-directed approach to editor development. All user’s mistakes will immediately marked. On this study, the editor will support only .jape files, because of integration features. Only basic functions will be created for the earliest as possible deploying of the system, but then new ones will be added. For example, it will be possible to draw a diagram and see how a JAPE code is changing.
