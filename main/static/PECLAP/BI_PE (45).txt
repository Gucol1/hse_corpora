Introduction
Background. Subject matter experts and end users should be involved in the process of design, development, and maintenance of information systems, because they know the features and limitations of existing ones. However, they are not IT specialists and do not understand the programming languages ??and database diagrams descriptions that are necessary in the process of creating an information system.
In this regard, tools based on a model-oriented approach to the information system creating are more popular nowadays. They are more accessible for experts and users and more flexible, since only visual models are modified.
Visual languages are most often used to build models with a model-oriented approach to software development. Such models describe the subject domain, business processes, analytical models for solving decision-making problems, etc. At the same time, its designing can be a difficult task, because in addition to the massive of the model the lack of data that is necessary to create the model may be another problem.
However, the creation of large information systems involves the development of several models that describe the system from various points of view. Moreover, each expert is forced to rebuild them using his own language and notation. It leads to the need of the model matching.
Thus, model transformation is an integral part of a model-oriented approach to software development. If the business process model is described in any visual notation, then the conversion to the corresponding analytical model can be automated.
Problem Statement. There are several tools that make it possible to transform visual models. The most functional one is the MetaLanguage that allows users to convert graphs in various notations. However, this tool has significant limitations. A tough implementation approach allows you to transform models according to the "1 to 1" rule.
The user of the system cannot set the conditions for the conversion, specify what needs to be transferred from one notation to another and what is not. There is also no way to increase the multiplicity of the connection or the number of elements.
In order to facilitate and increase the user's work, the ability to configure some general transformation rules without having to delve into the complexity of the algorithm is also important, which the existing system does not provide.
Therefore, it is necessary to create a new algorithm that will solve the described problems and will include new necessary functions. So, the goal of this project is to develop the visual model transformation tools for the DSM Platform.
To achieve this goal, it is necessary to solve the following tasks:
1. To analyze the subject area and identify the problems of existing algorithms. To formulate the functional requirements for the system based on that disadvantages.
2. To consider the main notations for describing business processes and identify those for which it is necessary to develop a new algorithm.
3. To describe an algorithm that removes restrictions.
4. To develop the algorithm in the system using the selected tools.
Delimitations of the Study. To limit the problem, the work will consider the transformation of only some notations for describing business processes into analytical models. Also, in designing the requirements for the tools only those systems that use a model-oriented approach will be considered. 
Professional Significance. The practical importance of this work is that there are not tools that use such transformation methods similar to the one being developed. In the future, this tool can be used to solve practical problems for specific areas. The introduction of DSM Platforms allows attracting users to the system development process. And the new algorithm will make its use even more convenient.
     
Literature Review
reveals the basic concepts and principles of the DSM approach. It is intended to reduce the software development process due to the possibility of generating part of the code. This approach is characterized by increased abstraction. In addition, with this approach, focusing on a narrow area increases the possibility of automating the solution of the problem, because in this case, concepts and rules specific to this area will be used. 
Due to the lack of a single algorithm for the formation of the development process with the DSM approach, also proposed its own one. First, it is necessary to analyze the subject domain and define domain-specific language. Designed language needs to be tested. The next step is to determine technique rules for this area. And then only development, testing, and deployment are needed.
To work with the DSM platform, the development of Domain-Specific Modeling Languages is required. This is a time-consuming process that needs the work of at least two experts with domain and language development knowledge. was aimed at reducing the complexity of this process. Due to the possibility of setting general rules and formulating a general algorithm, they developed their own tool for developing the language.
UML notation is widespread since it is intuitive to model developers. But it is very difficult for transformations and other actions. Therefore, examined the advantage of DSM languages and how to convert from UML to DSML. Although DSML requires an initial effort in their development, they are much easier to manipulate. is devoted to some approaches to the development of the Domain-Specific Modeling Language and shows an example based on UML notation.
DSM platform is convenient because models created on the basis of the developed language can be transformed. The transformations described in  are divided into several levels. Low-level transformations allow you to convert a model into a model. Such transformations use information obtained from the metamodel. That is the transformation accept other transformations as input parameters. Such conversions are already at a higher level and are used in the process of transforming a model into a model.
discusses the fine-grained approach to the transformation of models, which involves applying changings to smaller parts of the model and its gradual specifying. This method allows to reduce deviations during the transformation of models. Their experiments have shown that it is more useful to validate more specific models.
The possibility of conversion settings is a very useful function for the user. A similar one was implemented in the tool described in. This tool allows you to create a transformation from a transformation. The input template converts the model within one notation according to user-defined rules.
describes the development of a complete tool for creating a modeling language and model transformation. Its key feature is the ability to share access to developments, as well as the availability of templates for specific subject areas, that is very useful for an expert simplifying his work.
The functionality of sharing was also found at mentioning several platforms with cloud access. This article discusses the possibility of using the basic principles of other approaches to optimize the DSM one. Also, several platforms are called that allow not only to use the language development functions, but also to share them through cloud access.    
Methods
In this paper, theoretical and general scientific research methods will be used. First, existing analogues of the system for transforming visual models need to be analyzed, as well as the approaches and algorithms used in them. This will provide a basic understanding of transformation techniques. From the information obtained, it is possible to synthesize their disadvantages that will make it possible to formulate requirements for the developed tools.
Next, it is necessary to consider the main notations of modeling business processes and justify the choice. For each notation, a metamodel is built on the basis of which models will be built for integration into the system. The rules of model transformation need to be formulated. At this point, missing features will be valuable to appear. Then mathematical models and new transformation algorithms need to be developed.
After this, the implementation of the system will immediately follow, including several stages. When designing the developed tools, the necessary diagrams will be built.
At the development stage, the methods and tools of object-oriented programming will be used in the work. Directly developing tools involves the implementation of the stated functional requirements.
In order to verify the working capacity of the development, it is necessary to conduct testing that will verify the correct operation of the module. The most common type is test cases. For each system event, user actions are described along with the expected result, which is then compared with the result that will be obtained during testing. If the results do not match, the module needs refinement or correction of the error.
Results Anticipated
As a result of this project, a tool for visual model transformations without restrictions will be developed. After considering methods and algorithms in different systems, an analysis of existing analogues will be carried out with the identification of the advantages and disadvantages of the approaches and implementations used. This will lead to formulating requirements for future development. Based on this information, the system will be designed and formally described using diagrams. And then the development of tools will immediately follow with the implementation of functional requirements, as well as testing and documentation.
Conclusion
This article describes the development of visual model transformation tools for the DSM Platform. First, the problem of the project was identified, and the goal and tasks were set for its solution. Then the model-oriented approach was described as a tool for effective software development, and DSML was described as a universal language that is convenient to transform. After that, the methods used in the work were presented. Finally, the expected results of the project were described. The developed system will be of great practical importance, as it will reduce time spent by experts on the description of the subject area and business processes.
  
