INTRODUCTION
The idea of virtual museum development came up after it became clear, that Perm Campus of Higher School of Economics has been evolving dramatically in the past few years, thereby gaining respectable and vast history, as well as numerous closely related artifacts. These artifacts have to be stored somewhere and still remain eye-catching and informative. According to modern tendencies, it was decided to design a virtual museum for the sake of keeping those pieces of history and attracting new students.
First of all, the subject area should be defined: this is, obviously, Higher School of Economics, as far as every museum item will be a part of it. 
The personal interest in this topic is supported with feeling of affiliation to the Higher School of Economics.
It is obvious that such a complicated system like virtual museum is impossible to create without persuasive theoretical background on web-design and programming paradigms and therefore meaningless. This is also something, that should not be done from the scratch, since there are a number of already implemented solutions for some modules.
Considering this, it was decided to use server centric architecture that works with an application server, which provides middleware services with security and data access. For storing of business data and providing security it requires databases. The basics of such architecture can be found in.  
Another key aspect of technology selection is programming paradigm. Luckily, there are not that many applicable choices, rather than object-oriented programming. The key feature of this paradigm is that it places data within objects along with the methods that operate on that data. To put it simple: almost everything can be treated as entity (object), that can perform some actions (methods) and have some attributes (properties). To take a closer look, please refer to.
There are numbers of languages that support object-oriented programming, and in this case PHP seems to be the most suitable one, due to its reliability and sustainability. Despite PHP is considered to be the most common and widespread language in server layer web development segment, it is not covered by HSE-Perm Campus educational program, thus has to be acquainted with. For this reason has been chosen as a source of knowledge, hits and tips. In fact, it is a simple online manual, created and supported by developers and for developers. Unlike any other suspicious books and articles, where authors present their own understanding of the material, this manual was composed by a group of colleagues, it is constantly updated and has a list of comments under every article, made by professional developers for the inexperienced ones.
The abbreviation OOP in this research paper is to be interpreted as Object-Oriented Programming.
Significance of this work is far beyond normal: the history of university is something that definitely should be kept somewhere, otherwise Higher School of Economics will lose its identity eventually.
This research paper covers issues, connected with handling clients requests on server side, according to developer`s team tasks. 
PROBLEM STATEMENT
The whole workflow of application server architecture consists of the following actions:
1. Client enters a desired web page in the browser.
2. Browser forms a request and sends it to the server.
3. Application server runs specific script that generates web page for the client, according to his request.
4. Application server returns generated page.
5. Browser displays the web page.
The only item in the list that is going to be covered here is 3, because the rest actions are already implemented everywhere: 1,2 and 5 are implemented in every browser (Chrome, Mozilla, IE) and 4 is a basic functionality of every application server like Apache.
Web page generation cannot be performed in a general way because the content (artifacts) is very specific and request-dependent. Several methods have been worked out in order to combat this. The simplest one is to design an object model that will provide semantics level for the script. 
OBJECTIVES AND AIMS
When it comes to developing something, it is often vague and obscure, what exactly should be done. That is why the whole work will be divided into three general stages (objectives):
stage 1: subject area analysis;
stage 2: object model designing (according to OOP pattern);
stage 3: dynamic web pages’ generator development.
No specific objectives will be needed, as far as those three will fully satisfy all needs.
METHODS AND APPROACHES 
During the subject area analysis, a process of defining the key conventions will take place: developer`s team will discuss the main objects of the system like artifact, exposure, frame and others. 
After that, when the key objects of the model are defined, it is possible to start designing the inner architecture: the way all the objects are related, what are their purposes and duties. This can be done with the help of Class Diagrams from UML notation. They will be useful in forming an overall view of the system and figuring out, how it should behave.
Finally, the most interesting part begins: direct coding, debugging and testing. This is expected to be done with the help of PHP OOP language, that provides powerful tools in web scripts development.
PREDICTED RESULTS
The script (generator) is expected to form web pages that will contain data about artifacts and its related objects. They will provide a user experience of visiting a real museum with exposures right in front of the monitor. This is going to be a result of a server part module of a whole virtual museum. It will strongly depend on other parts of the system like web page designing and will definitely require a future polish.
STRENGTHS AND LIMITATIONS OF THE STUDY
The main limitation here is that the module itself has no implementation. It can only be viable as a part of the whole system – the virtual museum, otherwise it is just a set of rules for the server to respond client’s requests.
The script agility, on the other hand, is something that also worth pointing out: once the runtime of virtual museum is established, the future workflow becomes an easy task. There will be no need in hardcoding every web page: everything will be constructed dynamically.
CONCLUSION
Taking everything into consideration, it is worth saying that, in case the whole idea will work out, Higher School of Economics will acquire a powerful tool for keeping its historical events safe and reachable. It will also be useful in attracting new students and employees. There is still a wide range of functions, that can be implemented in the future, but this is something that can be assigned to the further student’s generations.      
         
