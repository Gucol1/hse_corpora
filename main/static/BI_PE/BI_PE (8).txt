INTRODUCTON
The topic of this research is “Application Layer Components Development of the Text Corpora Cloud Storage”. The first task machine processing of natural language arose in the 1960s and since that time, such tasks have not lost their relevance. The systems of the natural language processing are still not widely used: in particular, because of the strict requirements for the syntax, poor quality of the phrases recognition and due to the time and software resources required for their implementation. Despite this, the software processing of natural language is constantly evolving and linguistic processors are evolving along with it. Linguistic processor performs the role of a mediator between the user and the database, whose information the user is interested in. The task of such a processor is the natural language transformation into a set of semantic structures. Such structures represent a formal meaning of the source text. Then they used as an input data for the search engines of the database. 
At present, the users of linguistic processors are, basically, experts in the field of computational linguistics. The average user, who is interested in corpus linguistics, but not related to the field of information technology, will face serious difficulties during the work with the system. The obvious problem is that modern linguistic processors have a very high barrier to entry. Therefore, the goal of this work is to develop the components, which will be the layer between the user and linguistic processor. This will simplify the system for the user and reduce the barrier to entry accordingly. Finding the solution and its implementation will be helpful for improvement of software development and design skills. In addition, this work can be useful during receipt in a magistracy, and the system can be mentioned in the resume.
There are several assumptions: first, this work describes the development of the components that will be created on the basis of the GATE (General Architecture for Text Engineering) linguistic processor. In addition, these components must have access to the cloud storage in order to download/upload the data. Now this cloud storage is under development by Roman N. Bushuev.
Before starting work, it is necessary to familiarize with the concept and areas of application of corpus linguistics. For example, Nadja Nesselhauf in her article “Corpus Linguistics: A Practical Introduction” explains many key points of this field, such as the concept of corpus linguistics and the corpora, the functions they perform. In addition, Nadja gives the example software, which performs the corpora analysis, and she describes the methods of its use. Since this work will be conducted by using the GATE linguistic processor, it is necessary to master the principles of work with this system. There are the user guide “Developing Language Processing Components with GATE” written by eight authors, including H. Cunningham, D. Maynard and others, which contains a large amount of information about GATE and its uses. There are both simple things: how to download and install the system, and more complicated: working with ontologies, the use of plugins, useful tricks. Development of the components will be carried out in the Java programming language. In order to study this language the book “Think Java. How to Think Like a Computer Scientist” by Allen B. Downey will be used. This book contains all the essentials about Java from the basics to complex things. In addition, there are clear practical examples and their detailed explanation.
At present, reduction of the entry barrier of the linguistic processors is very significant because these systems greatly simplify the work with natural language.  They can be used to perform such tasks as the facts extraction from text, competitive intelligence, sentiment analysis of messages and much more. Because of the application layer components, which will link the system with the user is possible to increase the audience of the linguistic processors.
PROBLEM STATEMENT
Over the last few decades, thanks to technological progress, information technologies have become an integral part of our lives and now they make life easier in almost all spheres. As well as in linguistics, with the help of computers, in particular computer processing of natural language, now there are the opportunities to perform professional activities, spending minimum time and resources. As already mentioned, linguistic processors help to perform many tasks – tokenization, semantic annotation, finding keywords and much more. 
Unfortunately, linguistic processors are popularized only among specialists in the field of computational linguistics due to the high entry barrier. Most users encounter problems while starting work with linguistic processor and they just abandon this technique.  However, manual ways of the text processing clearly inferior machine processing because it requires more labor resources. The possible solution to this situation is to promote linguistic processors, increasing the number of their users. The reduction of the barrier to entry can be achieved by creating an additional layer that would connect the processor and the user. That is why this paper describes the development of the application level, which will simplify the interaction with the linguistic processor.         
OBJECTIVE AND AIMS
The objective of this research is software components development to access the services of the GATE linguistic processor in the development of the cloud storage.
In order to reach the objective it is required to perform the following aims. First, the analysis of the functionality, advantages and disadvantages of the GATE linguistic processor should be carried out. After that, it is necessary to consider the ways of access to this system. Therefore, at this stage the description of access methods to GATE will be created. Then, an interface of interaction between the cloud storage and linguistic processor will be designed. The final task is to implement the software components to access the services of the linguistic processor. 
METHODS 
There are several methods to achieve the objectives of this research. At the design stage, an object modeling will be performed by using Unified Modeling Language (UML) and the web interface will be created by using markup language HTML. During the implementation phase, object-oriented languages will be used. Object-oriented programming (OOP) is a programming paradigm based on the concept of objects, which are data structures that contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods. 
As already mentioned, the software components will be created on the basis of GATE. GATE is a Java suite of tools used for many natural language processing tasks, including information extraction in many languages. GATE architecture consists of interconnected components with clearly defined interfaces written in the Java programming language. Therefore, in this work the software components also will be written in Java. However, it is possible that some parts of the software will be implemented using an object-oriented language C#.
PREDICTED RESULTS
During this research the software components will be developed. These components will represent an application layer between the GATE linguistic processor and the cloud storage. The main tasks of this level are to gain access to GATE, to link the cloud storage with the processor for the text documents circulation and to simplify the work with GATE in general. 
In addition, the program will provide the interface through which the user will be able to perform the above functions. This interface should be a web application, which is available to the user via a web browser. This program should be integrated with the target system and ready to use.
LIMITATIONS
Due to the time frame there is a huge amount of risk. For example, difficulties may arise while using some technology for the development of a certain part of the system. In this case, the time to study this technology will have to be increased, while the completion date cannot be deferred. Moreover, the final system should be assembled from four parts, each of which is currently under development by four different people. In this instance, each developer affects whether the system will be implemented and ready to use. 
DELIMITATIONS
Nevertheless, for all the problems that are described in the limitations section is possible to find a solution. If the system will not be implemented by the deadline date, it will be forwarded for further development, for instance, as a research in a magistracy. In case of problems with the study of certain technologies, it is possible to seek the assistance of supervisor. Although the final system will be assembled from four separate pieces, currently developers are independent from each other. Each of us can continue its work without waiting for another and it is greatly speeds up the process.
CONCLUSION
This paper has given an account of application layer components development. The purpose of this research is to develop the software components in order to gain access to the services of the GATE linguistic processor in the development of the cloud storage. GATE is a Java suite of tools used for many natural language processing tasks. During the execution of this work, the cloud storage is under development by Roman N. Bushuev. 
Software components will represent the application layer between the GATE linguistic processor and the cloud storage. Their functions are obtaining access to the processor, maintenance of interaction between the processor and cloud storage, text document circulation ensuring. These components will associate the user and GATE, thereby simplifying work with GATE.
The final version of the system will be assembled from four parts, each of which is currently under development by four different people. Further development and support of the system will be conducted as a research in a magistracy. The system, created during this study will help to reduce the entry barrier of linguistic processors. It will increase the number of their users and will help to distribute computer processing of natural language, which gives the opportunities to perform the professional activities of linguists, spending minimum time and resources.
