Introduction
Background. In the modern world people try to automate many routine processes with the help of IT. With this people pursue tasks such as saving time and increasing accuracy of results. Algorithms to solve standardized tasks usually are subject to automation, for example production of parts of specified sizes. However, since the middle of the last century science fiction writer dreamed of machines with intellect that could be compared to humans, one that is able to solve creative problems: write poems, create paintings, etc., where the result is open-ended. Such tasks seem more and more achievable with the development of technology. 
Over the past few years many interested developers have been working to create new approaches and architectures of neural networks that imitate the work of a human brain and are more suitable for creative tasks.
Neural networks imitating the work of a human brain that trained on more than a million examples are able to deliver unique solutions that have no analogs. So far, these experiments are only conducted within the walls of universities, because people can't find use for them in practice. In practice, however, neural networks are often used to solve problems of forecasting, as well as for tasks related to computer vision: recognition of objects and faces, improving image quality, etc.
In order to promote the problem of computer art the interested community holds various forums and contests, for example since 2015 the contest of Robot Art paintings is held annually in the USA. Our task is to take this problem to the next level and find its application in practice. 
Problem Statement. Landscape generation can be referred to as one of the creative tasks for the computer. But it can't be a random arrangement of objects to fill the forest in a computer game, landscaping is the design of a beautiful and practical yard, decorated in accordance with a set of rules. Usually landscapers develop projects during several weeks or months in order to achieve the ideal object positioning and the color ratio, and therefore the services of designers cost a lot of money. 
The system will help cope with this task in a few seconds. Of course, the resulting design may not be quite perfect, but it can be adjusted by the user. The result can also inspire the user to transform and improve the area. Thus, this task can be applied in real life.
Aim and Objectives. Earlier writer tried to solve this problem with the help of a genetic algorithm, but because of the complexity related to setting the fitness function a good result could rarely be obtained. That is why in this work we have chosen another approach to the solution of this problem. 
The aim of this work is to develop the system for landscape design using a neural network module to assess the quality and beauty of design, as well as to begin preparing the basis for the implementation of the network-generator.
The aim solution includes several complex stages, namely:
1. Subject area analysis:
1.1. Analysis of the rules and concepts of landscape design.
1.2. Preparation and design of unique architectural objects for the system under development.
1.3. Creation of a base of ready architectural solutions: with and without rules.
2. System design:
2.1. Definition of the system requirements.
2.2. Design and description of the application architecture.
2.3. Definition of the required functionality for convenient landscape design process.
2.4. Neural networks engineering research.
2.5. Design of the expert neural network for landscape design evaluation and mistakes detection.
2.6. Design of the neural network for the landscape design generation and research of various options for implementation.
3. System development:
3.1. Implementation of 2D-editor for design with the help of basic tools and prepared objects.
3.2. Dataset preparation and implementation of neural network module.
4. After development:
4.1. System testing.
4.2. Deploying the system on the server.
4.3. Beginning of accumulation of the base of the various designs created by editor, necessary for network-generator training, because thousands of marked examples are needed for further deep learning. 
The final result can be an extensible system that offers complete unique solutions for landscape design.
Delimitations of the Study. The work should analyze approaches to landscape design. Also, this work should give the overview of neural network architectures and select a suitable one for implementation for the new landscape design task.
Literature review
This literature reviews goal is to take a closer look at the literature on landscape design and neural network design. During the studying of the literature about landscape design, one of our main tasks is to highlight principles and concepts that should be taken into account by a professional designer in creating an architectural solution. In addition to this principles, it is necessary to learn about the mistakes that a beginner designer makes in order to avoid them in the design of landscape. Rules and mistakes have a very large impact on the preparation of a dataset to train neural networks, so that they are engrained in the network and affect the result. For example, for the neural network that assesses the quality of a landscape design it is very important to classify the mistakes so that at the output we understand what is wrong with the design and how to fix it. Also, the literature about landscape design will help to form the list of architectural objects, as well as the author's style for their visual representation in the editor being developed. The book "Encyclopedia of Garden Design: Planning, Building and Planting Your Perfect Outdoor Space" and the booklet "How to design your dream garden" will help to cope with these tasks, as well as: inspire ideas for creating stunning flowerbeds and rockeries, teach how to properly combine plants, take into account the climatic conditions of the area, place and connect the tracks of the building on the site, and properly illuminate the environment.
Before we start designing and developing neural networks, need to get answers to questions: "How does the human brain work?" and "How do neural networks imitate the work of the human brain?" - in other words, start with the basics. The article "How to Build a Brain: From Function to Implementation" from 2007 gives an understanding of the structure of neural networks, such as the perceptron, as well as mathematical formulas needed to work with the algorithm of backpropagation.
The book "Neural Network Design" provides definition of different types of neural network architectures, teaches how to correctly design them, define hidden layers and activation functions. This book is must-read for a developer interested in neural networks. 
Since there are many different styles of landscape design and even more human opinions about the beauty of various designs, neural network in development should be called expert, as the result of net work is imitation the logic of the particular designer and tries to evaluate the design close to what would offer the expert designer. This problem was described in the article "Neural Networks as Expert Systems".
Another feature of the neural network for landscape design evaluation is that necessary input a two-dimensional array of marks - a completed design. Usually in simple neural networks a two-dimensional array is converted into a one-dimensional array, which negatively affects to the results of the work. Yan Likun's developed a convolutional architecture of neural networks in 1988 to work with two-dimensional arrays, which is effective for pattern recognition. At this stage of research it already becomes clear that a simple neural network is not suitable for solving this work's tasks, complex architecture and deep learning are needed. If it is possible to solve a problem of an estimation of landscape design image recognition by means of a convolutional neural network and to add layers for classification of possible mistakes, then with implementation of the network for generation of unique architectural decisions not all is obvious yet.
In 2014 Ian Goodfellow, the researcher in the area of machine learning, was offered the architecture that uses training with a teacher, where two neural networks compete: one that generates some data and the other that validates the data, verifies it and forces the data to be re-generated if the it does not pass verification. The neural network that is being developed for landscape design evaluation can be used in generative adversarial nets architecture as a teacher, and net being designed for landscape architecture creation as a generator. But it is appropriate to ask the question: "Why only design the network generator, and not implement it?". The fact is that for the correct work of deep learning in networks of generators needs large volumes of data for the neural network to learn to highlight the various features and reproduce them, we are talking about thousands of examples with markup. Unfortunately, at the moment there are no ready-made datasets for landscape design, and we will have to create them ourselves. Of course, a similar problem may arise with the neural network for evaluation, but the data needed for its learning is not as expansive. A similar case, where a small dataset is used to teach a neural network is described in "Rembrandts and Robots: Using Neural Networks to Explore Authorship in Painting", where to determine the authenticity of pictures a neural network was taught only on 100 examples, where to determine the result it was necessary to reduce the probability and error. It would also be good practice to standardize and format the data needed to make the it easier for the neural network to determine the required features. By data preparation we mean the transformation of an image into another representation: mathematical or more compressed with an obvious emphasis on features. 
Article "Accelerating Very Deep Convolutional Networks for Classification and Detection" discusses the problem of classification and its optimization in convolutional neural networks, this is the task to be solved in the neural network that determines the quality of a landscape design, so the study of this material should have a good impact on the design process. 
In 2019 article was published by a student at Harvard University, which describes the process of developing the neural network that solves the creative problem: the location of rooms and the arrangement of furniture in an apartment, based only on the given contours of the perimeter. At the heart of the algorithm is the network with GAN architecture, which first builds the walls inside the outlines of the perimeter (noise), then determines the type of room (bedroom, kitchen, etc.) and places the furniture. The neural network in consideration has been trained on millions of examples (the author has requested digital plans of millions of New York apartments), and the process of its training took several days. This work confirms that neural networks can cope with architectural tasks. This is the result we need to strive for, namely start accumulating a dataset.
Methods
Before starting to develop the system, it is necessary to understand the subject area with which we want to work. The study of landscape design should be started by reading books and manuals for landscape designers. This should be done to compare different approaches to landscape design, analyze and highlight the basic principles that need to be considered by the designer. It is also possible to highlight the nuances with which experienced architects have already deal with. Books about landscape design will also help to form the list of necessary architectural objects: plants, buildings and so on. The processed information can serve as a good start for formation of the expert approach to garden design and for creation the dataset for neural network training. Examples of designs found in books also will help with creation of unique designs of architectural elements. 
The design stage of the application first it is necessary to define functional (persons of interest, use cases, business processes, the user interface) and non-functional (API, system needs) requirements. At the system design stage, it is also good practice to use UML diagrams. Use-case diagram for description of business processes, sequence diagrams for transition from business requirements to API, class diagram for description of internal application architecture. 
It is also necessary to describe the process of interaction of the client and server parts of the application, as well as to define the technologies that are used in development, namely: Python and Django framework for backend implementation, ReactJS library (HTML, JavaScript) and SASS (preprocessor language that is interpreted into CSS) for frontend part. It should be understood that all neural network computations will take place on the server, the client will communicate with the server via requests. The practice of a lightweight client will help make the system accessible and undemanding to users' devices, which will increase its integration capabilities. 
A separate stage of design is neural network design for the generation and evaluation of landscape design, as well as the ability to combine them. For this purpose, it is necessary to research different architectures and types of neural networks (GAN, convolutional, full-coupled, non-deep), highlight the advantages, disadvantages and difficulties that can have an impact on neural network work for this task. Input and output parameters should be determined, consider ways of their preparation and optimization (smoothing). For development of any types of neural networks one can use Keras library, also written for Python language. 
During the testing, one should rely on black-box method and use the application use scenarios. Server load testing is possible. Use of Docker containers to deploy server is also possible.
Results Anticipated
The main result of the work is the achievement of set aim and objectives, as well as the preparation of the background for the development of the task through neural networks. The result of this work also includes the acquisition of new knowledge and skills. 
At the stage of analysis of the subject area it is necessary to form a list of basic and non-main criteria that should be taken into account during landscape design. Also it is needed to identify the main classes of mistakes that beginner designers can make. Should create the list of landscape architecture objects and draw them with the help of vector graphic editor, using the author's unique design. The dataset of designs for training the neural network to evaluate the landscape design, the dataset should include at least 100 examples, and modify them differently to increase the sample size. Rules and mistakes should be taken into account when designing and developing neural networks, creating the dataset for training and marking out architectural designs. 
At the design stage it is necessary to write the technical assignment for the developing system, construct three UML diagrams that describing the development stages: use-case diagram, sequence diagram and class diagram. It is also necessary to describe the architecture of neural networks and possible difficulties. 
At the implementation stage it is necessary to present the code of the running application: client and server parts, special attention should be paid to data preparation and training of the neural network for landscape design assessment. The system in development should have the function of saving plans designed by users, which is needful to accumulate data for training the neural network for complete landscape designs generation and additional training of the neural network for evaluation. 
At the testing stage the results should be described too. 
Conclusion
This work describes the process of developing a landscape design system with an editor and neural networks which are used to generate and evaluate completed architectural solutions. The neural network module for evaluation of landscape designs should be fully implemented. The neural network for generation of architectural solutions should be designed and be at the stage of data accumulation for training. After completing the development of the generation module it is possible to implement it in the system and create the generative adversarial network using the network for design evaluation. 
