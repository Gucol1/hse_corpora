 name ..  I'm student and I'm gonna present work (er) sound card data interface data transfer system based the capabilities the sound card so here go (er) today there are emergency data transmission systems that can provided without additional equipment ... (er) internet and cellular communications must maintained what we created data transmission interface that can receive digital information via radio distance tens kilometres using just computer sound card ... the main idea the project quite simple use the sound card tool for complex analysis audio data the Microsoft Visual Studio twenty nineteen environment was chosen the main product for development ... first need implement audio input and output port for this used the free proprietary library and audio ... certain protocols have been developed encode the binary digital data the data presented with sound wave special form follows each bit encoded with half-cycle different amplitudes the amplitude one twice the amplitude zero however this case have continuous dataset and the event the loads at least one bit will lose the integrity the entire stream to solve this problem can divide the entire datastream into blocks equal size we select each block with special half periods with the amplitude that twice one amplitude now need decide the coding density that determines the data transfer rate the sending rate most sound cards doesn't exceed ninety-six kilohertz but was guided frequency fourty-eight  kilohertz these and those restrictions maximum possible speed determine the signal carrier frequency which depends the modulation component ...  practice shows using another signal can relay the density one point two one point four kilobytes per second at the corresponding carrier frequency ten kilohertz which lies the ratio audible frequencies well these densities are sufficient for high-speed text transmission digital sound conversations for example images and files from the conditions imp= imperfection analogue carriers information channels the method redundant noise correcting encoding was applied the hand code the principle simple additional check bits are added each data block which will allow to check the received blocks for errors the hamming code allow to correct one single error each data block and detect unfixable ones ... convert text (er) please.  excuse .. convert text sound each symbol encoded with specific set bits the data size for one symbol eight bits but the hamming code expands to twelve ..  due existing text encoding use dynamic data density per symbol I created own symbol libraries the volume one symbol library approximately two hundred symbols for writing punctuation marks and numbers have been allocated universal byte values which cannot found other libraries russian and english symbolic libraries were also made switching between libraries has made using special  eight bit markers and marker an unique data block that doesn't use hamming code instead it's duplicated several times the datastream being the place where another library needs be included the eight bit marker identifies the symbol library index ... for digital file encoding the file divided into thirty two sections clusters the information about the file required for the coding placed header special text area encoded according the principle described above the header contains the file properties and list hash sums clusters after the header there stream file data the file data block contains thirty-two bits useful information and its expanded to forty-eight the hamming code dividing the file into sections provides the ability check each thirty-two clusters hash sums and case errors the integrity the file won't lost highlight the file error separated from the file stream well switch the coder receive file data eight bit markers are used the which are reserved from the symbol library there are also some thirty-two bit markers ...  the program consists few classes specially designed for specific tests the main class includes graphical interface for the main program window for user interaction and the namespace for handling events this where the man= the main processes working with sound card take place data encoding into wave realised through working with wave files their structure very simple and represents set samples points than form sound wave therefore the encoding process itself directly bit painting an audio library one main thing it gets the bytes from the sound card that define the samples ... next the bytes combined into samples are sent for the next processing all processing stages are running independently the next process simple extraction the half periods the sound wave intersect the horizontal axis signal polarity ..  and it's quite easy to  track the intersection actually the clipped sections the wave are written the buffer then the maximum value the sample calculated corresponding the amplitude the half-period half timed amplitudes are buffered also ..  the main task the decoder to find set amplitudes that correspond the data block ... there synchronization algorithm for this the amplitudes are buffered that more than one data block can stored the buffer that no more than two pulses it quite simple determine the pulse indexes these are the first and second maximum amplitudes the buffer and the amplitude indexes between them are the data block to select text data buffer with sixteen amplitudes used and for file data sixty-four next the maximum value the amplitude buffer the data block calculated corresponding the amplitude one the value taken constant compared with remaining amplitude and based the difference conclusion issued zero one 
 please mind the timing 
 okay additionally two algorithms have been developed improve the stability decoding the single linearization and smoothing linearization flattens the amplitudes with the power polynomial and smoothing averages the amplitudes spread within one bit ... the program has variety debugging and analysis tools such percentage signal qualities statistics decoded data field called squares wave line graph and debug logging interface it ... can also decode real-time mp3 stream and jpeg image stream ... (em) however I've developed interface that able not only turn the sound card into data transfer port but also give that second life (em) old analogue media digital data storage you know ... thanks for attention  
 okay thank you very much indeed something highly advanced and technical but I'm sure there are technically-advanced people amongst our audience but first and foremost please you have any questions the speaker 
 thank you very much (em) cannot ask anything about this technical part but person from management and economics would like ask you about the economic managerial application your study how can managers apply this (er) information our (er) daily environment 
 (em) so firstly you are gonna know that additional costs needed and this can used implement cheap data transmission systems and can give second life for old storages like you know it possible transmit data using any phone radio transmitter for example and you can just put the radio to the computer and microphone and put you sound card transmit something you gonna have radio transmitter and you need connect into this whole curb line outdoor just ... yeah  
 thank you (em) any other questions please may ask you one more question apparently also economics-related ... you believe such systems are cost-effective  
 yes I'm going have (em) opinion about this and ... how said this ..very cheap and in emergency situations you can just use your transmitters and radio to implement this features 
 that's really valuable feature then what you have described thank you any other questions from the audience please okay 
